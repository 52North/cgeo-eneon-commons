<?php
/*
 * Copyright (C) 2016
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 * If the program is linked with libraries which are licensed under one of
 * the following licenses, the combination of the program with the linked
 * library is not considered a "derivative work" of the program:
 *
 * - Apache License, version 2.0
 * - Apache Software License, version 1.0
 * - GNU Lesser General Public License, version 3
 * - Mozilla Public License, versions 1.0, 1.1 and 2.0
 * - Common Development and Distribution License (CDDL), version 1.0
 *
 * Therefore the distribution of the program linked with libraries licensed
 * under the aforementioned licenses, is permitted by the copyright holders
 * if the distribution is compliant with both the GNU General Public
 * License version 2 and the aforementioned licenses.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
 * Public License for more details.
 */

require_once 'eneon.info.inc';
require_once 'includes/eneon.issue.controller.inc';
require_once 'includes/eneon.network.controller.inc';

define('ENEON_ENTITY_NETWORK', 'eneon_network');
define('ENEON_PATH_NETWORKS', 'networks');

define('ENEON_ENTITY_ISSUE', 'eneon_issue');
define('ENEON_PATH_ISSUES', 'issues');

define('ENEON_VOCAB_BUNDLE_SBA', 'eneon_vocab_sba');
define('ENEON_VOCAB_BUNDLE_THEME', 'eneon_vocab_theme');

define('ENEON_ISSUE_SELECTED_SBAS', 'selected_sbas');
define('ENEON_ISSUE_SELECTED_THEMES', 'selected_themes');
define('ENEON_ISSUE_SELECTED_NETWORKS', 'selected_networks');
define('ENEON_NETWORK_SBA_REFERENCE', 'network_sba_ref');
define('ENEON_NETWORK_THEME_REFERENCE', 'network_theme_ref');

/**
 * Implements hook_init()
 */
function eneon_init() {
// comment in for debug
//   module_load_include('inc', 'eneon', 'includes/eneon.common');
//   eneon_update_networks();
}

/**
 * Implements hook_menu()
 */
function eneon_menu() {
  // https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_menu/7.x#sub_autoload_wildcards
  $autoload_issue_wildcard = ENEON_PATH_ISSUES . '/%' . ENEON_ENTITY_ISSUE;
  $autoload_network_wildcard = ENEON_PATH_NETWORKS . '/%' . ENEON_ENTITY_NETWORK;
  $autoload_network_modal_wildcard = 'eneon/%ctools_js/%' . ENEON_ENTITY_NETWORK;

  $items[ENEON_PATH_ISSUES] = array(
      'title' => t('Issues'),
      'page callback' => 'eneon_view_issue_list',
      'access arguments' => array('access content'),
      'file' => 'eneon.pages.inc',
  );
  $items[ENEON_PATH_ISSUES . '/add'] = array(
      'title' => t('Add issue'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('eneon_issue_wizard'),
      'access arguments' => array('access content'),
      'file' => 'eneon.issue.wizard.inc',
      'type' => MENU_LOCAL_TASK,
  );
  $items[$autoload_issue_wildcard] = array(
      'title' => t('Issue'),
      'page callback' => 'eneon_view_entity_item',
      'page arguments' => array(1),
      'access arguments' => array('access content'),
      'file' => 'eneon.pages.inc',
  );
  $items[$autoload_issue_wildcard . '/view'] = array(
    'title' => 'View Issue',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items[$autoload_issue_wildcard . '/edit'] = array(
      'title' => 'Edit issue',
      'page callback' => 'drupal_get_form',
      'access arguments' => array('access content'),
      'page arguments' => array('eneon_issue_wizard', 1),
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
      'file' => 'eneon.issue.wizard.inc',
  );
  $items[$autoload_issue_wildcard . '/delete'] = array(
      'title' => t('Delete issue'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('eneon_issue_form_delete', 1),
      'access arguments' => array('access content'),
      'file' => 'eneon.issue.ui.inc',
  );

  $items[ENEON_PATH_NETWORKS] = array(
      'title' => t('Networks'),
      'page callback' => 'eneon_view_network_list',
      'access arguments' => array('access content'),
      'file' => 'eneon.pages.inc',
  );
  $items[$autoload_network_wildcard] = array(
      'title' => t('Network'),
      'page callback' => 'eneon_view_entity_item',
      'page arguments' => array(1, ENEON_ENTITY_NETWORK),
      'access arguments' => array('access content'),
      'file' => 'eneon.pages.inc',
  );

  $items[$autoload_network_modal_wildcard] = array(
      'title' => t('Network Details'),
      'page arguments' => array(1, 2),
      'page callback' => 'eneon_view_network_modal',
      'access callback' => TRUE,
      'file' => 'eneon.pages.inc',
  );
  return $items;
}

///**
// * Implements hook_cron()
// */
// function eneon_cron() {
// // regularly download and update graph
// eneon_update_networks();
// }


